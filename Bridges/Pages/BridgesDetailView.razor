@page "/bridgesdetailview/{action}/{id:int}/{name?}/{filename?}/{desc?}/{lat:double?}/{lng:double?}/{zoom:double?}/{height:double?}"

@inject IBridgesService bridgesService;
@inject ICoordsService coordsService;

    @using BridgesDomain.Model
    @using BridgesService.Interfaces

    @{
        Bridge bridge = null;
        var msgText = string.Empty;

        if (!string.IsNullOrEmpty(Action))
        {
            switch (Action.ToLowerInvariant())
            {
                case "update":
                    {
                        bridge = bridgesService.GetBridgeById(Id);
                        if (bridge == null) // Assumes add bridge
                        {
                            bridge = new Bridge(Name, Filename, Desc, Lat, Lng, Zoom, Height);

                            bridgesService.Add(bridge);

                            msgText = $"SUCCESS - Bridge Id: {@bridge.Id} added";
                        }
                        else
                        {
                            bridge.Name = Name;
                            bridge.Filename = Filename;
                            bridge.Description = Desc;
                            bridge.FileBytes = null;
                            bridge.Lat = Lat;
                            bridge.Lng = Lng;
                            bridge.DistanceToMouthKm = coordsService.DistanceBetween(bridge.Lat, bridge.Lng, bridge.River.MouthLat, bridge.River.MouthLng);
                            bridge.DistanceToSourceKm = coordsService.DistanceBetween(bridge.Lat, bridge.Lng, bridge.River.SourceLat, bridge.River.SourceLng);
                            bridge.DistanceToSourceKm = 0;
                            bridge.Zoom = Zoom;
                            bridge.Height = Height;

                            bridgesService.Update(bridge);

                            msgText = $"SUCCESS - Bridge Id: {@bridge.Id} updated";
                        }
                        break;
                    }
                default:
                    {
                        bridge = bridgesService.GetBridgeById(Id);
                        break;
                    }
            }
        }
        else
        {
            bridge = bridgesService.GetBridgeById(Id);
        }

        if (bridge != null)
        {
            var lat = @bridge.Lat;
            var lng = @bridge.Lng;
            var zoom = @bridge.Zoom;
            var height = @bridge.Height;
            var satParams = "!3m1!1e3";
            var url = $"https://www.google.co.uk/maps/@{lat},{lng},{height}m/data={satParams}";

            if (!string.IsNullOrEmpty(msgText))
            {
                <hr />
                <img style="border: none; height: 45px; width: 45px;" src="Images/info.png" />
                <msginfo>@msgText</msginfo>
                <hr />
            }

            <table>
                <thead>
                    <h6>
                <th colspan="2">@bridge.Name<a href=@url> Show in maps</a></th>
                </h6>
                </thead>
                <tr style="vertical-align: top">
                    <td style="width: 40%">
                        <a href="Images/Original/@bridge.Filename">
                            <img alt="No image found for bridge with name: @bridge.Name" height="600" width="800" src="Images/Original/@bridge.Filename" />
                        </a>
                    </td>
                    <td>
                        <p>@bridge.Description</p>
                        <hr />
                        <table>
                            <tr><td>Id</td><td>@bridge.Id</td></tr>
                            <tr><td>Name</td><td>@bridge.Name</td></tr>
                            <tr><td>Filename</td><td>@bridge.Filename</td></tr>
                            <tr><td>Lat</td><td>@bridge.Lat.ToString("##.#######")</td></tr>
                            <tr><td>Lng</td><td>@bridge.Lng.ToString("##.#######")</td></tr>
                            <tr><td>Disance to mouth (km)</td><td>@coordsService.DistanceBetween(bridge.Lat, bridge.Lng, bridge.River.MouthLat, bridge.River.MouthLng).ToString("#.##")</td></tr>
                            <tr><td>Distance to source (km)</td><td>@coordsService.DistanceBetween(bridge.Lat, bridge.Lng, bridge.River.SourceLat, bridge.River.SourceLng).ToString("#.##")</td></tr>
                            <tr><td>Zoom</td><td>@bridge.Zoom.ToString("#.##")</td></tr>
                            <tr><td>Height</td><td>@bridge.Height.ToString("#.##")</td></tr>
                        </table>
                        <hr />

                        <a href="bridgesdetaileditview/view/@bridge.Id">
                            <p>Edit</p>
                        </a>
                    </td>
                </tr>
            </table>
        }
        else
        {
            <p>No bridge found for bridge with Id: @Id</p>
        }
    }

    @code
{
        [Parameter]
        public string Action { get; set; }

        [Parameter]
        public int Id { get; set; }
        [Parameter]
        public string Name { get; set; }
        [Parameter]
        public string Filename { get; set; }
        [Parameter]
        public string Desc { get; set; }
        [Parameter]
        public double Lat { get; set; }
        [Parameter]
        public double Lng { get; set; }
        [Parameter]
        public double Zoom { get; set; }
        [Parameter]
        public double Height { get; set; }
    }
