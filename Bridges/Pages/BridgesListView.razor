@page "/bridgeslistview/{action}/{page:int?}/{id:int?}"

@inject IBridgesService bridgesService;

@using BridgesDomain.Model
@using BridgesService.Interfaces

<style>
    img {
        width: 48px;
        height: 48px;
        border: none;
        horiz-align: center;
    }

    img:hover {
        box-shadow: 0 0 2px 1px darkslategray);
    }
</style>

@{
    var bridgeCount = bridgesService.GetAllBridges().Count();
    var bridgesPerPage = 10;
    var exportedFilename = string.Empty;

    switch (Action.ToLowerInvariant())
    {
        case "delete":
            {
                Bridge bridge = bridgesService.GetBridgeById(Id);

                if (bridge != null) // This is annoying as could be called with the back button or manual url input.
                {
                    bridgesService.Delete(bridge);

                    <hr />
                    <img style="border: none; height: 45px; width: 45px;" src="/Images/info.png" />
                    <msgwarn>SUCCESS - Bridge @Id deleted</msgwarn>
                    <hr />
                }
                break;
            }
        case "exporttocsv":
            {
                exportedFilename = ExportToCsv();
                break;
            }
        case "exporttotxt":
            {
                exportedFilename = ExportToTxt();
                break;
            }
        case "exporttohtml":
            {
                exportedFilename = ExportToHtml();
                break;
            }
        case "exporttoxml":
            {
                exportedFilename = ExportToXml();
                break;
            }
    }

    if (Action.ToLowerInvariant().StartsWith("export"))
    {
        <hr />
        <img style="border: none; height: 45px; width: 45px;" src="/Images/info.png" />
        <msginfo>SUCCESS - Exported <a href="file:///C:/SeansStuff/Code/Bridges/Bridges/@exportedFilename">@exportedFilename</a></msginfo>
        <hr />
    }
    
    <table id="bridgeslisttable">
        <thead>
        <h6>
            <th>Name</th>
            <th>Description</th>
            <th>Filename</th>
            <th>Lat</th>
            <th>Lng</th>
            <th>Distance To Mouth (km)</th>
            <th>Distance From Source (km)</th>
            <th>Zoom</th>
            <th>Height</th>
            <th></th>
            <th></th>
            <th></th>
        </h6>
        </thead>
        @foreach (var bridge in bridgesService.GetBridgesInRange(bridgesPerPage, (Page - 1) * bridgesPerPage))
        {
            var satParams = "!3m1!1e3";
            var url = $"https://www.google.co.uk/maps/@{@bridge.Lat},{@bridge.Lng},{@bridge.Height}m/data={satParams}";
            @*<tr style="background-color: aquamarine">*@
            <tr>
                <td>@bridge.Name</td>
                <td>@bridge.Description</td>
                <td>@bridge.Filename</td>
                <td>@bridge.Lat.ToString("##.######")</td>
                <td>@bridge.Lng.ToString("##.######")</td>
                @*TODO: Add color based on heat map to db*@
                <td style="background-color: #bbbbff">@bridge.DistanceToMouthKm.ToString("#.##")</td>
                <td>@bridge.DistanceFromSourceKm.ToString("#.##")</td>
                <td>@bridge.Zoom.ToString("#.##")</td>
                <td>@bridge.Height.ToString("#.##")</td>
                <td><a href="@url"><img src="Images/maps-icon.jfif"/></a></td>
                <td><a href="bridgesdetaileditview/view/@bridge.Id"><img src="Images/E-icon.png"/></a></td>
                <td><img src="Images/D-icon.png" onclick="DeleteBridge(@bridge.Id)"/></td>
            </tr>
        }
        <tfoot>
        <th colspan="3">
            <div class="pagination">
                @for (var i = 1; i <= (bridgeCount / bridgesPerPage) + 1; i++)
                {
                    <span><a href="bridgeslistview/list/@i">@i</a></span>
                }
            </div>
        </th>
        <th column="4">
            Add:
            <a href="bridgesdetaileditview/add/0" width="75px"><img src="Images/A-icon.png"/></a>
        </th>
        <th colspan="12" style="text-align: right;">
            Export to:
            <a href="bridgeslistview/exporttocsv/1"><img src="Images/exToCsv.svg" /></a>
            <a href="bridgeslistview/exporttotxt/1"><img src="Images/exToTxt.svg" /></a>
            <a href="bridgeslistview/exporttohtml/1"><img src="Images/exToHtml.svg" /></a>
            <a href="bridgeslistview/exporttoxml/1"><img src="Images/exToXml.svg" /></a>
        </th>
        </tfoot>
    </table>
}

@code
{
    [Parameter]
    public string Action { get; set; }

    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public int Page { get; set; }

    public string ExportToCsv()
    {
        return bridgesService.ExportToCsv();
    }

    public string ExportToTxt()
    {
        return bridgesService.ExportToTxt();
    }

    public string ExportToHtml()
    {
        return bridgesService.ExportToHtml();
    }

    public string ExportToXml()
    {
        return bridgesService.ExportToXml();
    }
}
