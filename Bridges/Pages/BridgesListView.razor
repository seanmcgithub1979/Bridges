@page "/bridgeslistview/{action}/{page:int?}/{id:int?}"

@inject IBridgesService bridgesService;

@using BridgesDomain.Model
@using BridgesService.Interfaces

<style>
    img {
        width: 32px;
        height: 32px;
        border: none;
        horiz-align: center;
    }

    img:hover {
        box-shadow: 0 0 2px 1px darkslategray);
    }
</style>

@{
    var exportedFilename = string.Empty;

    switch (Action.ToLowerInvariant())
    {
        case "delete":
            {
                Bridge bridge = bridgesService.GetBridgeById(Id);

                if (bridge != null) // This is annoying as could be called with the back button or manual url input.
                {
                    bridgesService.Delete(bridge);

                    <hr />
                    <img style="border: none; height: 45px; width: 45px;" src="/Images/info.png" />
                    <msgwarn>SUCCESS - Bridge @Id deleted</msgwarn>
                    <hr />
                }
                break;
            }
        case "exporttocsv":
            {
                exportedFilename = bridgesService.ExportToCsv();
                break;
            }
        case "exporttotxt":
            {
                exportedFilename = bridgesService.ExportToTxt();
                break;
            }
        case "exporttohtml":
            {
                exportedFilename = bridgesService.ExportToHtml();
                break;
            }
        case "exporttoxml":
            {
                exportedFilename = bridgesService.ExportToXml();
                break;
            }
    }

    if (Action.ToLowerInvariant().StartsWith("export"))
    {
        <hr />
        <img style="border: none; height: 45px; width: 45px;" src="/Images/info.png" />
        <msginfo>SUCCESS - Exported <a href="file:////Bridges/@exportedFilename">@exportedFilename</a></msginfo>
        <hr />
    }

    var bridgeCount = bridgesService.GetAllBridges().Count();
    var bridgesPerPage = 11;
    
    <table>
        <thead>
            <h6>
                <th>Name</th>
                @*<th>Description</th>*@
                @*<th>Filename</th>*@
                <th>Lat</th>
                <th>Lng</th>
                <th>Distance To Mouth (miles)</th>
                <th>Distance From Source (miles)</th>
                <th>Source - Mouth</th>
                <th>Zoom (maps)</th>
                <th>Height (maps)</th>
                <th></th>
                <th></th>
                <th></th>
            </h6>
        </thead>
        @foreach (var bridge in bridgesService.GetBridgesInRange(bridgesPerPage, (Page - 1) * bridgesPerPage))
        {
            var hexColor = bridgesService.GetHexColor(@bridge.DistanceToMouthMiles);
            var satParams = "!3m1!1e3";
            var url = $"https://www.google.co.uk/maps/@{@bridge.Lat},{@bridge.Lng},{@bridge.Height}m/data={satParams}";
            
            <tr>
                <td><a href="bridgesdetailview/view/@bridge.Id/@bridge.Name/@bridge.Filename/@bridge.Description/@bridge.Lat/@bridge.Lng/@bridge.Zoom/@bridge.Height/"><strong>@bridge.Name</strong></a></td>
                @*<td>@bridge.Description</td>*@
                @*<td>@bridge.Filename</td>*@

                <td>@bridge.Lat.ToString("##.######")</td>
                <td>@bridge.Lng.ToString("##.######")</td>
                <td style="background-color: @hexColor">@bridge.DistanceToMouthMiles.ToString("#.##")</td><td>@bridge.DistanceFromSourceMiles.ToString("#.##")</td>
                <td><progress value="@bridge.DistanceFromSourceMiles" max="57" style="width: 100%;"></progress></td>
                <td>@bridge.Zoom.ToString("#.##")</td>
                <td>@bridge.Height.ToString("#.##")</td>
                <td><a href="@url" target="_blank"><img src="Images/maps-icon.jfif"/></a></td>
                <td><a href="bridgesdetaileditview/view/@bridge.Id"><img src="Images/E-icon.png"/></a></td>
                <td><img src="Images/D-icon.png" onclick="DeleteBridge(@bridge.Id)"/></td>
            </tr>
        }
        <tfoot>
        <th colspan="3">
            <div class="pagination">
                @{
                    var pages = bridgeCount / bridgesPerPage;
                    if (bridgeCount % bridgesPerPage > 0)
                    {
                        pages++;
                    }
                }
                @for (var i = 1; i <= pages; i++)
                {
                    <span><a href="bridgeslistview/list/@i">@i</a></span>
                }
            </div>
        </th>
        <th column="4">
            Add:
            <a href="bridgesdetaileditview/add/0" width="75px"><img src="Images/A-icon.png"/></a>
        </th>
        <th colspan="10" style="text-align: right;">
            Export to:
            <a href="bridgeslistview/exporttocsv"><img src="Images/exToCsv.svg" /></a>
            <a href="bridgeslistview/exporttotxt"><img src="Images/exToTxt.svg" /></a>
            <a href="bridgeslistview/exporttohtml"><img src="Images/exToHtml.svg" /></a>
            <a href="bridgeslistview/exporttoxml"><img src="Images/exToXml.svg" /></a>
        </th>
        </tfoot>
    </table>
    @*<div class="status-secondbottom">
    </div>*@
}

@code
{
    [Parameter]
    public string Action { get; set; }

    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public int Page { get; set; }
}
